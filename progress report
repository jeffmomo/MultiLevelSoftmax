## Things we can implement ##

Have the classifier gain the ability to train records which do not have the actual label, but only a label at a certain point
in the hierarchy. 

e.g. a rare spider species which only have 3 images dedicated to it. We dont discard it, 
and train it across the entire spider family.
-----
Enable classification at any arbitrary point of the hierarchy

----

Use advanced input augmentation?
---
Allow to start classifying from a certain point of hierarchy - e.g. classify the object, given a prior point in the hierarchy
----
Randomised ReLU?
-----
Produce actual probabilities?

Maybe produce all "probabilities" for all leaf nodes, sum them, and use current "probability" divide by that.
this is probably not possible
----

---

## Progress reports ##


-----ongoing-----

Using tensorflow

ZCA Whiten images after subtracting mean
Input augmentations
training basic model through wide-res-nets

-----done----

Prune tree such that only nodes with a certain number of observations remain

Can transform string-based hierarchy chains into index-based hierarchy chains for use in the Layer structure

Can generate target training vectors using the structure with hierarchical hints

Able to use that hierarchy to build structured layers which we can hierarchically evaluate off

Finished creating hierarchy from observations

Grabbed 500K images so far

Created python file which multi-treadedly grabs image files off the specified link
However, some files are massive, meaning we cannot store the million observations without taking up too much space.

Thus we need to apply the transformations to each image as we download them.
This will be done using OpenCV.

We will only take the central 50% of the pixels into consideration, and we have to normalise all images such that they have 
an equal size and aspect ratio.

### How To Use ###

1. Generate taxonomy tree with the hierarchy chains
2. Get the leaf node (or not, if you want to use Genus) definitions as a list (this will be the labels vector)
3. Build using this definitions list
4. Generate a Layer and a mapping from fullname to layer index
5. We can now the mapping to map from a name-based hierarchy to a index-based hierarchy for use with the Layer
6. Use the Layer (possibly along with a priors chain) to evaluate a target vector

